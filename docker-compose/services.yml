version: '3.7'
services:
  twitter-to-kafka-service:
    image: ${GROUP_ID}/twitter.to.kafka.service:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005"
    volumes:
      - "./docker-logs:/workspace/twitter-to-kafka-service/logs"
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_TOPIC-NAMES-TO-CREATE_0=twitter-topic"
      - "KAFKA-CONFIG_TOPIC-NAMES-TO-CREATE_1=twitter-analytics-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=false"
    networks:
      - ${GLOBAL_NETWORK:-services}
  kafka-to-elastic-service:
    image: ${GROUP_ID}/kafka.to.elastic.service:${SERVICE_VERSION:-latest}
    ports:
      - "5006:5006"
    volumes:
      - "./docker-logs:/workspace/kafka-to-elastic-service/logs"
    depends_on:
      - twitter-to-kafka-service
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - elastic-1
      - elastic-2
      - elastic-3
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006 -Xms256m -Xmx512m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=twitter-topic"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
    networks:
      - ${GLOBAL_NETWORK:-services}
  keycloak-server:
    image: jboss/keycloak:${KEYCLOAK_VERSION:-latest}
    hostname: keycloak-server
    ports:
      - '9091:9091'
    environment:
      - "KEYCLOAK_USER=admin"
      - "KEYCLOAK_PASSWORD=admin"
      - "JAVA_OPTS=-Djboss.http.port=9091"
      - "DB_VENDOR=POSTGRES"
      - "DB_ADDR=host.docker.internal"
      - "DB_DATABASE=keycloak"
      - "DB_USER=postgres"
      - "DB_SCHEMA=keycloak"
      - "DB_PASSWORD=postgres"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-service:
    image: ${GROUP_ID}/elastic.query.service:${SERVICE_VERSION:-latest}
    ports:
      - "5008:5008"
      - "8183:8183"
    volumes:
      - "./docker-logs:/workspace/elastic-query-service/logs"
    depends_on:
      - elastic-1
      - elastic-2
      - elastic-3
      - keycloak-server
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5008 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "ELASTIC-CONFIG_INDEX-NAME=twitter-index"
      - "ELASTIC-CONFIG_CONNECTION-URL=http://elastic-1:9200"
      - "SERVER_PORT=8183"
      - "SERVER_SERVLET_CONTEXT-PATH=/"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-server:9091/auth/realms/microservices-realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-server:9091/auth/realms/microservices-realm/protocol/openid-connect/certs"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_TOKEN-URI=http://keycloak-server:9091/auth/realms/microservices-realm/protocol/openid-connect/token"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://host.docker.internal:5432/twitter?currentSchema=public&binaryTransfer=true&reWriteBatchedInserts=true"
      - "ELASTIC-QUERY-SERVICE_QUERY-FROM-KAFKA-STATE-STORE_URI=http://kafka-streams-service:8187/get-word-count-by-word/{word}"
      - "ELASTIC-QUERY-SERVICE_QUERY-FROM-ANALYTICS-DATABASE_URI=http://analytics-service:8188/get-word-count-by-word/{word}"
      - "ELASTIC-QUERY-SERVICE_WEBCLIENT_QUERY-TYPE=KAFKA_STATE_STORE"
    networks:
      - ${GLOBAL_NETWORK:-services}
  elastic-query-web-client:
    image: ${GROUP_ID}/elastic.query.web.client:${SERVICE_VERSION:-latest}
    ports:
      - "5010:5010"
      - "8184:8184"
    volumes:
      - "./docker-logs:/workspace/elastic-query-web-client/logs"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5010 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_PORT=8184"
      - "SERVER_SERVLET_CONTEXT-PATH=/"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_BASE-URL=http://elastic-query-service:8183/documents"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_ID=elastic-query-service"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_HOST=elastic-query-service"
      - "ELASTIC-QUERY-WEB-CLIENT_WEB-CLIENT_INSTANCES_0_PORT=8183"
    networks:
      - ${GLOBAL_NETWORK:-services}
  kafka-streams-service:
    image: ${GROUP_ID}/kafka.streams.service:${SERVICE_VERSION:-latest}
    ports:
      - "5012:5012"
      - "8187:8187"
    volumes:
      - "./docker-logs:/workspace/kafka-streams-service/logs"
    depends_on:
      - keycloak-server
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5012 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "SERVER_PORT=8187"
      - "SERVER_SERVLET_CONTEXT-PATH=/"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER-URI=http://keycloak-server:9091/auth/realms/microservices-realm"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak-server:9091/auth/realms/microservices-realm/protocol/openid-connect/certs"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "LOG_APP-NAME=kafka-streams-service"
      - "SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-broker-1:9092, kafka-broker-2:9092, kafka-broker-3:9092"
    networks:
      - ${GLOBAL_NETWORK:-services}